plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.4.4"
    id("io.micronaut.aot") version "4.4.4"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

dependencies {
       annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")

    // Micronaut SerDe and Validation

    implementation("jakarta.annotation:jakarta.annotation-api")

    // Micronaut HTTP Client (optional for external API communication)
    compileOnly("io.micronaut:micronaut-http-client")
    testImplementation("io.micronaut:micronaut-http-client")
implementation('io.micronaut.sql:micronaut-jdbc-hikari:4.3.0')
    // Database and ORMimplementation('io.micronaut.sql:micronaut-jdbc-hikari:4.3.0')
    implementation("io.micronaut.data:micronaut-data-jdbc")

    implementation("jakarta.persistence:jakarta.persistence-api") // JPA annotations


    // Logging
    runtimeOnly("ch.qos.logback:logback-classic")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("jakarta.annotation:jakarta.annotation-api")
    compileOnly("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    testImplementation("io.micronaut:micronaut-http-client")
implementation 'io.micronaut.data:micronaut-data-jdbc:4.7.3' 
dependencies {
    implementation("io.micronaut.sql:micronaut-jdbc-hikari:4.7.3") // HikariCP for connection pooling
    implementation("io.micronaut.data:micronaut-data-jdbc")      // JDBC support
    implementation("jakarta.persistence:jakarta.persistence-api") // JPA annotations
    runtimeOnly("org.postgresql:postgresql")                     // PostgreSQL driver
}


}


application {
    mainClass = "com.example.Application"
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}


graalvmNative.toolchainDetection = false

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        replaceLogbackXml = true
    }
}



